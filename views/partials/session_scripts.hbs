<script src="https://cdn.jsdelivr.net/gh/supertokens/supertokens-web-js/bundle/website.js"></script>
<script src="https://cdn.jsdelivr.net/gh/supertokens/supertokens-web-js/bundle/supertokens.js"></script>
<script src="https://cdn.jsdelivr.net/gh/supertokens/supertokens-web-js/bundle/session.js"></script>
<script src="https://cdn.jsdelivr.net/gh/supertokens/supertokens-web-js/bundle/emailpassword.js"></script>
<script>
  supertokens.init({
    appInfo: {
      apiDomain: `${location.protocol}//${location.host}`,
      apiBasePath: "/auth",
      appName: "moveton"
    },
    recipeList: [
      supertokensSession.init(),
      supertokensEmailPassword.init()
    ]
  });

</script>
<script>
  async function signUpClicked(email, password) {
    try {
      let response = await supertokensEmailPassword.signUp({
        formFields: [{
          id: "email",
          value: email
        }, {
          id: "password",
          value: password
        }]
      })

      if (response.status === "FIELD_ERROR") {
        // one of the input formFields failed validaiton
        response.formFields.forEach(formField => {
          if (formField.id === "email") {
            // Email validation failed (for example incorrect email syntax),
            // or the email is not unique.
            window.alert(formField.error)
          } else if (formField.id === "password") {
            // Password validation failed.
            // Maybe it didn't match the password strength
            window.alert(formField.error)
          }
        })
      } else {
        // sign up successful. The session tokens are automatically handled by
        // the frontend SDK.
        window.location.href = "/"
      }
    } catch (err) {
      window.alert(
        err.message
      )
      if (err.isSuperTokensGeneralError === true) {
        // this may be a custom error message sent from the API by you.
        window.alert(err.message);
      } else {
        window.alert("Oops! Something went wrong.");
      }
    }
  }

</script>
<script>
  async function signInClicked(email, password) {
    try {
      let response = await supertokensEmailPassword.signIn({
        formFields: [{
          id: "email",
          value: email
        }, {
          id: "password",
          value: password
        }]
      })

      if (response.status === "FIELD_ERROR") {
        // one of the input formFields failed validaiton
        response.formFields.forEach(formField => {
          if (formField.id === "email") {
            // Email validation failed (for example incorrect email syntax).
            window.alert(formField.error)
          }
        })
      } else if (response.status === "WRONG_CREDENTIALS_ERROR") {
        window.alert("Email password combination is incorrect.")
      } else {
        // sign in successful. The session tokens are automatically handled by
        // the frontend SDK.
        window.location.href = "/"
      }
    } catch (err) {
      if (err.isSuperTokensGeneralError === true) {
        // this may be a custom error message sent from the API by you.
        window.alert(err.message);
      } else {
        window.alert("Oops! Something went wrong.");
      }
    }
  }
</script>
